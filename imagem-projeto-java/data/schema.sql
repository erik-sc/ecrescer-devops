DROP TABLE IF EXISTS usuario CASCADE;
DROP TABLE IF EXISTS permissao CASCADE; 
DROP TABLE IF EXISTS post CASCADE; 
DROP TABLE IF EXISTS curtida CASCADE;
DROP TABLE IF EXISTS comentario CASCADE; 
DROP TABLE IF EXISTS amizade CASCADE; 
DROP TABLE IF EXISTS pedido_amizade CASCADE; 

CREATE TABLE usuario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	nome_completo VARCHAR(200) NOT NULL,
	apelido VARCHAR(100),
	data_nascimento DATE NOT NULL,
	email VARCHAR(100) NOT NULL,
	senha VARCHAR(128) NOT NULL,
	imagem_perfil VARCHAR(512),
	ativo BOOLEAN NOT NULL
);
ALTER TABLE usuario ADD CONSTRAINT pk_usuario PRIMARY KEY (id);
ALTER TABLE usuario ADD CONSTRAINT uk_usuario_email UNIQUE (email);

CREATE TABLE permissao (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	funcao VARCHAR(100) NOT NULL,
	usuario_id BIGINT NOT NULL
);
ALTER TABLE permissao ADD CONSTRAINT pk_permissao PRIMARY KEY (id);
ALTER TABLE permissao ADD CONSTRAINT uk_permissao UNIQUE (funcao, usuario_id);
ALTER TABLE permissao ADD CONSTRAINT fk_permissao_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;


CREATE TABLE post (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_id BIGINT NOT NULL,
	texto VARCHAR(255) NOT NULL,
	imagem VARCHAR(512),
	data_postagem TIMESTAMP NOT NULL,
	publico BOOLEAN NOT NULL
);
ALTER TABLE post ADD CONSTRAINT pk_post PRIMARY KEY (id);
ALTER TABLE post ADD CONSTRAINT fk_post_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;


CREATE TABLE curtida (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	post_id BIGINT NOT NULL,
	usuario_id BIGINT NOT NULL,
	data_curtida TIMESTAMP NOT NULL
);
ALTER TABLE curtida ADD CONSTRAINT pk_curtida PRIMARY KEY (id);
ALTER TABLE curtida ADD CONSTRAINT fk_curtida_usuario FOREIGN KEY (usuario_id) REFERENCES usuario;
ALTER TABLE curtida ADD CONSTRAINT fk_curtida_post FOREIGN KEY (post_id) REFERENCES post;

CREATE TABLE comentario (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	post_id BIGINT NOT NULL,
	usuario_id BIGINT NOT NULL,
	texto VARCHAR(200) NOT NULL,
	data_comentario TIMESTAMP NOT NULL
);
ALTER TABLE comentario ADD CONSTRAINT pk_comentario PRIMARY KEY(id);
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_post FOREIGN KEY(post_id) REFERENCES post;
ALTER TABLE comentario ADD CONSTRAINT fk_comentario_usuario FOREIGN KEY(usuario_id) REFERENCES usuario;

CREATE TABLE amizade (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_origem_id BIGINT NOT NULL,
	usuario_destino_id BIGINT NOT NULL
);
ALTER TABLE amizade ADD CONSTRAINT pk_amizade PRIMARY KEY(id);
ALTER TABLE amizade ADD CONSTRAINT fk_amizade_usuario_origem FOREIGN KEY(usuario_origem_id) REFERENCES usuario;
ALTER TABLE amizade ADD CONSTRAINT fk_amizade_usuario_destino FOREIGN KEY(usuario_destino_id) REFERENCES usuario;

CREATE TABLE pedido_amizade (
	id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
	usuario_origem_id BIGINT NOT NULL,
	usuario_destino_id BIGINT NOT NULL,
	data_pedido DATE NOT NULL
);
ALTER TABLE pedido_amizade ADD CONSTRAINT pk_pedido_amizade PRIMARY KEY(id);
ALTER TABLE pedido_amizade ADD CONSTRAINT fk_pedido_amizade_usuario_origem FOREIGN KEY(usuario_origem_id) REFERENCES usuario;
ALTER TABLE pedido_amizade ADD CONSTRAINT fk_pedido_amizade_usuario_destino FOREIGN KEY(usuario_destino_id) REFERENCES usuario;

